[auto_speed]

[mcu host]
serial: /tmp/klipper_host_mcu

[include mainsail.cfg]
[include KAMP_Settings.cfg]
[include stealthburner_leds.cfg]
[include chamber_leds.cfg]
[include nevermore.cfg]
[include timelapse.cfg]

[mcu]
canbus_uuid: 9f97c166b983

[mcu EBBCan]
canbus_uuid: 6e528e744929

[temperature_sensor EBB36]
sensor_type: temperature_mcu
sensor_mcu: EBBCan

[temperature_sensor Chamber_Temp]
sensor_type: Generic 3950
sensor_pin: PA2

[temperature_fan CM4_Fan]
pin: host:gpio26
shutdown_speed: 0.0
kick_start_time: 0.5
off_below: 0.19
min_temp: 0
max_temp: 88.0
target_temp: 30.0
max_speed: 0.85
min_speed: 0.0
control: pid
pid_Kp: 2.0
pid_Ki: 5.0
pid_Kd: 0.5
pid_deriv_time: 2.0
sensor_type: temperature_host
min_speed: 0.1
max_speed: 0.6

[printer]
kinematics: corexy
max_velocity: 390
max_accel: 10000
max_z_velocity: 15
max_z_accel: 300
square_corner_velocity: 6.0

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[firmware_retraction]
[exclude_object]

[stepper_x]
step_pin: PC8
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PC9                                                       # Check motor direction in link above. If inverted, add a ! before PB12
enable_pin: !PA15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop                      # Using Virtual Endstop or sensorless homing, make sure you install the jumper on the controller under the stepper
position_endstop: 120
position_max: 120
homing_speed: 40
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PD9
run_current: 1.06
diag_pin: PD3
interpolate: False
# run_current: 0.0            
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.sense_resistor: 0.110
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
driver_SGTHRS: 85                                                  # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[stepper_y]
step_pin: PA10
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PA14                                                        # Check motor direction in link above. If inverted, add a ! before PB2
enable_pin: !PA13
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop  
position_endstop: 120
position_max: 120
homing_speed: 40
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PD8
run_current: 1.06
interpolate: False
# run_current: 0.0            
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.sense_resistor: 0.110
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^PD2                                                      # YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK
driver_SGTHRS: 75                                                  # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[stepper_z]
step_pin: PC6
dir_pin: !PC7
enable_pin: !PA9
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: ^PC3
#position_endstop: 120
position_max: 125
position_min: -5
homing_speed: 20
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PB10
interpolate: False
## Moons leadscrew le174s-t0808-200-0-s-065
run_current: 0.75
sense_resistor: 0.110
stealthchop_threshold: 9999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
# if your Z motor is noise try setting this value to 9999

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 23                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA3
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 270
min_extrude_temp: 10
max_extrude_cross_section: 100000
max_extrude_only_distance: 999999.0
pressure_advance: 0.04                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: False
run_current: 0.6   # for LDO 36STH20-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

[filament_switch_sensor material_0]
switch_pin: PC2

[heater_bed]
heater_pin: PA5
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PA0
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PD5, EXP1_3=PB3, EXP1_5=PB5, EXP1_7=PB7, EXP1_9=<GND>,
    EXP1_2=PD4,  EXP1_4=PD6, EXP1_6=PB4, EXP1_8=PB6, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PB8, EXP2_5=PC10, EXP2_7=PC12,  EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PB9, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

#[neopixel my_neopixel1]
#pin: PC11

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    60, 60, 20  # an example

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[homing_override]
axes: xyz
set_position_z: 0
gcode:
   G90
   G0 Z5 F600
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    _HOME_Z
  {% endif %}

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right


#####################################################################
#   Macros
#####################################################################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
  G28; home all without mesh bed level
  G1 Y6.0 Z0.2 F1000.0 ; go outside print area
  G92 E0.0
  VORON_PURGE
  G92 E0.0
  SET_LED LED="sb_leds" RED=1 GREEN=0 BLUE=0 SYNC=0 INDEX=1
  SET_LED LED="sb_leds" RED=1 GREEN=1 BLUE=1 SYNC=0 INDEX=2
  SET_LED LED="sb_leds" RED=1 GREEN=1 BLUE=1 SYNC=0 INDEX=3 TRANSMIT=1
  DAYLIGHT_ON
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y-10} F3600          ; park nozzle at rear
    SET_LED LED="sb_leds" RED=0 GREEN=1 BLUE=0 SYNC=0 INDEX=1
    SET_LED LED="sb_leds" RED=0 GREEN=1 BLUE=0 SYNC=0 INDEX=2
    SET_LED LED="sb_leds" RED=0 GREEN=1 BLUE=0 SYNC=0 INDEX=3 TRANSMIT=1
    DAYLIGHT_OFF

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E70 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F300                    ; extrude a little to soften tip
   G1 E-60 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT_RATIO = 0.7 %} # by default we are dropping the motor current during homing. you can adjust this value if you are having trouble with skipping while homing
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT_RATIO * RUN_CURRENT_Y}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait for StallGuard registers to clear
    M400
    G90
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Z]
gcode:
    G90
    G28 Z
    G1 Z30

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 60.210
#*# pid_ki = 2.113
#*# pid_kd = 428.999
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 13.032
#*# pid_ki = 0.572
#*# pid_kd = 74.281
#*#
#*# [stepper_z]
#*# position_endstop = 116.371
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 76.4
#*# shaper_type_y = mzv
#*# shaper_freq_y = 54.6
